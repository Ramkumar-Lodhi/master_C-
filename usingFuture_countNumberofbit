#include<iostream>
#include<thread>
#include<mutex>
#include<future>

using namespace std;
int Count_Numberofbit(int x)
{
    int count =0;
    while(x)
    {
            count += x&1;
            x = x>>1;
    }
    return count;
}
int main()
{
    auto future = std::async(Count_Numberofbit, 23);
    cout<<this_thread::get_id()<<" "<<future.get()<<endl;
    
    auto future1 = std::async(Count_Numberofbit, 5);
    cout<<this_thread::get_id()<<" "<<future1.get()<<endl;
    
    auto future2 = std::async(Count_Numberofbit, 1);
    cout<<this_thread::get_id()<<" "<<future2.get()<<endl;
    
    auto future3 = std::async(Count_Numberofbit, 2);
    cout<<this_thread::get_id()<<" "<<future3.get()<<endl;
    
    auto future4 = std::async(Count_Numberofbit, 2);
    cout<<this_thread::get_id()<<" "<<future4.get()<<endl;
      
    return 0;
}
